package main

import (
	"bufio"
	"fmt"
	"os"
	"strings"
)

func test1() {
	reader := strings.NewReader("nihao hello world")
	// Successive calls to the Scan method will step through the 'tokens' of a file, skipping the bytes between the tokens.
	bufReader := bufio.NewScanner(reader)
	// The specification of a token is defined by a split function of type SplitFunc;
	// the default split function breaks the input into lines with line termination stripped.
	// Split functions are defined in this package for scanning a file into lines, bytes, UTF-8-encoded runes, and space-delimited words.
	// The client may instead provide a custom split function
	bufReader.Split(bufio.ScanWords) // Split sets the split function for the Scanner.

	// Scan advances the Scanner to the next token, which will then be available through the Bytes or Text method.
	// It returns false when the scan stops, either by reaching the end of the input or an error.
	// After Scan returns false, the Err method will return any error that occurred during scanning, except that if it was io.EOF, Err will return nil.
	for bufReader.Scan() {
		// Text returns the most recent token generated by a call to Scan as a newly allocated string holding its bytes.
		// 至此，明白什么是token了
		// 因为Text返回的是string，具有不可变属性，所以下一次Scan操作不会对上一次Text的结果有任何影响
		fmt.Println(bufReader.Text())
	}
	fmt.Println(bufReader.Err()) // 返回是nil

	freader, _ := os.Open("/tmp/data")
	scanner := bufio.NewScanner(freader)
	// the default split function breaks the input into lines with line termination stripped.
	for scanner.Scan() {
		//  Bytes returns the most recent token generated by a call to Scan.
		// The underlying array may point to data that will be overwritten by a subsequent call to Scan.
		// It does no allocation.
		// NOTE: 返回值为[]byte，表明了数据是有可能被修改的
		fmt.Println(string(scanner.Bytes()))
	}
}

func test2() {
	// MaxScanTokenSize = 64 * 1024 说明一个token最大不能超过64k
	// By default, Scan uses an internal buffer and sets the maximum token size to MaxScanTokenSize.
	reader := strings.NewReader("hello world")
	bufReader := bufio.NewScanner(reader)
	// 设置太短：bufio.Scanner: token too long
	data := make([]byte, 20)
	bufReader.Buffer(data, 20)
	bufReader.Split(bufio.ScanWords)
	fmt.Println(bufReader.Scan())
	fmt.Println(bufReader.Err())
	fmt.Println(bufReader.Text())
	fmt.Println(string(data)) // Buffer中缓存的数据可不止一个Token，所以直接使用data时没有意义的
}

func main() {
}
